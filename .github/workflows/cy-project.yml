name: CI Project OCC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Install Dependencies & run tests with jacoco report
        run: mvn clean install jacoco:report

      - name: Upload Jacoco report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

  quality-back:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=occ_ci_cd \
          -Dsonar.projectName=occ_ci_cd \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests and generate coverage
        run: npm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: front/coverage/bobapp

  quality-front:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Install SonarQube Scanner
        run: npm install -g sonar-scanner
      - name: Build and analyze frontend with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=occ_ci_cd-frontend \
          -Dsonar.projectName=occ_ci_cd-frontend \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN